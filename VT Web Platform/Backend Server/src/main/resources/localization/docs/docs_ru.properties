main-concepts.about-functionality.title=Об идее
main-concepts.about-functionality.text.p-1=Смысл нашего приложения заключается в упрощении изучения прикладного материала в программировании путём использования визуализации. Порой так не хватает чего-то более подробного и излишнего, чем просто документации.
main-concepts.about-functionality.text.p-2=Мы предлагаем идею создания и использования визуализированных задач. Любой код может быть сопровождён визуализационной сценой, которая поможет понять, как это работает. Это позволит получить дополнительный источник информации в изучении программирования.
main-concepts.about-functionality.text.p-3=Конечно же, для создания таких материалов требуется определённый навык разработки - чтобы составить задачу и описать визуализацию для неё. Поэтому в нашей системе выделяется отдельная роль разработчикам и создателям задач.
main-concepts.about-application.title=О приложении
main-concepts.about-functionality.text.p-1-1=Для создания и решения задач мы предлагаем использовать наше десктопное приложение. Для его получения посетите наш 
main-concepts.about-application.link-text-1=github
main-concepts.about-application.text.p-1-2=.
main-concepts.about-application.text.p-2=Оно предоставляет функционал, необходимый для создания и решения задач, созданных в рамках платформы.

developing.visualization.supported-visualizations.title=Поддерживаемые виды визуализации
developing.visualization.supported-visualizations.text.p-1=Для визуализации приложение поддерживает на данный момент следующие библиотеки:
developing.visualization.supported-visualizations.types-list.1=Swing
developing.visualization.supported-visualizations.types-list.2=JavaFX
developing.visualization.how-to-use.title=Как использовать
developing.visualization.how-to-use.text.p-1=Для визуализации разработчикам задач предоставляются два файла:
developing.visualization.how-to-use.files-list.1.name=visualization/CustomPanel.java
developing.visualization.how-to-use.files-list.1.description=класс, расширяющий класс панели из используемой графической библиотеки. Здесь вы можете переопределить любые методы, чтобы настроить поведение панели.
developing.visualization.how-to-use.files-list.2.name=visualization/VisualizationScenePanel
developing.visualization.how-to-use.files-list.2.description=класс-обёртка над экземпляром CustomPanel для его настройки.
developing.visualization.how-to-use.text.p-2-1=Если вам  нужны классы, которые вы будете использовать внутри шаблонных, создавайте их внутри папки 
developing.visualization.how-to-use.text.p-2.arg-1=visualisation 
developing.visualization.how-to-use.text.p-2-2=- тогда они автоматически будут импортированы.
developing.visualization.visualization-scene-methods.title=Методы VisualizationScenePanel
developing.visualization.visualization-scene-methods.text.p-2=Предоставляются следующие методы:
developing.visualization.visualization-scene-methods.methods-list.1.name=adjustControlButtons()
developing.visualization.visualization-scene-methods.methods-list.1.description=позволяет включить или выключить кнопки управления визуализационной сценой. По умолчанию все кнопки выключены. Для выключения поставьте false для необходимой переменной из
developing.visualization.visualization-scene-methods.methods-list.1.vars.1=isStartEndButtonsEnabled
developing.visualization.visualization-scene-methods.methods-list.1.vars.2=isForwardBackStepButtonsEnabled
developing.visualization.visualization-scene-methods.methods-list.1.vars.3=isPlayPauseButtonsEnabled
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.header-1=Имя переменной
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.header-2=Описание
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.1-1=isStartEndButtonsEnabled
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.1-2=Блокирует кнопки быстрой перемотки в начало / в конец визуализации.
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.2-1=isForwardBackStepButtonsEnabled
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.2-2=Блокирует кнопки перехода на шаг вперёд и на шаг назад.
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.3-1=isPlayPauseButtonsEnabled
developing.visualization.visualization-scene-methods.methods-list.1.vars-table.3-2=Блокирует кнопки воспроизведение и паузы сцены.
developing.visualization.visualization-scene-methods.methods-list.2.name=adjustEdgesCommands()
developing.visualization.visualization-scene-methods.methods-list.2.description=Позволяет настроить крайние шаги визуализации.
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.header-1=Имя переменной
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.header-2=Описание
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.1-1=inInitialStateCommand
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.1-2=Выбор начального шага сцены. Если переменная не определена, в качестве начального шага будет использоваться первый шаг анимации. В качестве шага указывается имя функции из переопределённого класса VisualizationScenePanel.
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.2-1=initialStepDelay
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.2-2=Время задержки для перехода к начальному шагу.
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.3-1=atSceneStartCommand
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.3-2=Выбор метода, который переводит сцену в начальное состояние. Если переменная не определена, будет использоваться функция первого шага анимации. В качестве шага указывается имя функции из переопределённого класса VisualizationScenePanel.
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.4-1=atStartStepDelay
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.4-2=Время задержки для перехода на первый шаг.
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.5-1=atSceneEndCommand
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.5-2=Выбор метода, который переводит сцену в конечное состояние. Если переменная не определена, будет использоваться функция последнего шага анимации. В качестве шага указывается имя функции из переопределённого класса VisualizationScenePanel.
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.6-1=atEndStepDelay
developing.visualization.visualization-scene-methods.methods-list.2.vars-table.6-2=Время задержки для перехода на последний шаг.
developing.visualization.visualization-scene-methods.methods-list.3.name=setPanelStyle()
developing.visualization.visualization-scene-methods.methods-list.3.description=Метод, позволяющий настроить панель. Для настройки обращайтесь к переменной panel.
developing.visualization.visualization-scene-methods.methods-list.4.name=addComponents()
developing.visualization.visualization-scene-methods.methods-list.4.description=Метод, позволяющий добавить внутренние компоненты панели. Для добавления обращайтесь к переменной panel.
developing.visualization.adding-visual-step.title=Добавление шага визуализации
developing.visualization.adding-visual-step.text.p-1=Чтобы связать код с визуализационной сценой, вам нужно использовать метод регистрации визуализации в своих обёрточных классах.
developing.visualization.adding-visual-step.text.p-2=Такие команды принимают 3 аргумента:
developing.visualization.adding-visual-step.args-list.header-1=Имя аргумента
developing.visualization.adding-visual-step.args-list.header-2=Описание
developing.visualization.adding-visual-step.args-list.1-1=nextStep
developing.visualization.adding-visual-step.args-list.1-2=Название функции в VisualizationScenePanel , которая переведёт сцену в этот шаг визуализации
developing.visualization.adding-visual-step.args-list.2-1=previousStep
developing.visualization.adding-visual-step.args-list.2-2=Название функции в VisualizationScenePanel, которая переведёт сцену из этого шага визуализации в предыдущий (для обратной перемотки шагов)
developing.visualization.adding-visual-step.args-list.3-1=delay
developing.visualization.adding-visual-step.args-list.3-2=Задержка между воспроизведением шагов (в миллисекундах)

developing.wrapping.title=Что такое обёртки и как их реализовать
developing.wrapping.text.p1=Основная идея заключается в том, чтобы обучающийся использовал обычный синтаксис языка и просто решал задачу. Но перед выполнением в его решении изучаемые и визуализируемые классы и методы заменятся на те, что реализовал разработчик задачи.
developing.wrapping.text.p2-1=Так для того, чтобы визуализировать работу кода, вам нужно написать классы и функции, которые будут выполнять прикладной функционал и вызывать визуализацию (это описано подробнее в 
developing.wrapping.text.p2.arg-1=визуализации
developing.wrapping.text.p2-2=).
developing.wrapping.text.p3=Но также нужно определить факт оборачивания и указать, какое исходное имя у оборачиваемого объекта. Примеры кода для различных языков представлены ниже:
developing.wrapping.wrapping-code-comment.for-class=Пример для класса
developing.wrapping.wrapping-code-comment.for-function=Пример для функции

developing.task-upload.title=Как загрузить новую задачу
education.task-upload.text.steps.1=Сначала вам нужно создать свой аккаунт на платформе (он обязателен для создателей задач)
education.task-upload.text.steps.2=Войдите в приложении в свой аккаунт. Для этого воспользуйтесь вкладкой управления аккаунтом в меню.
education.task-upload.text.steps.3=В проекте, который вы хотите загрузить как задачу, обратитесь к той же вкладке аккаунта в меню и нажмите кнопку "Загрузить задачу".
education.task-upload.text.steps.3.notes.1=Для загрузки необходимо добавить все информационные файлы - не скупитесь на информацию о своей задаче!
education.task-upload.text.steps.3.notes.2=Крайне не рекомендуется менять расположение файлов и папок - задача может не пройти проверку на сервере.

education.task-download.title=Как скачать и открыть задачу
education.task-download.text.steps.1-1=Перейдите на 
education.task-download.text.steps.1.search-page-arg=страницу поиска задач 
education.task-download.text.steps.1-2=и скачайте архив с понравившейся задачей.
education.task-download.text.steps.2=Распакуйте архив в любую папку на вашем устройстве.
education.task-download.text.steps.3=Откройте эту папку как проект в приложении.

education.solution.solve-instruction.title=Как это использовать для решения задач?
education.solution.solve-instruction.text.p1=Здесь вы можете ознакомиться со стандартной инструкцией по решению задачи.
education.solution.solve-instruction.text.steps.1-1=Скачайте и откройте задачу. Это можно сделать по следующей 
education.solution.solve-instruction.text.steps.1.instruction-arg=инструкции
education.solution.solve-instruction.text.steps.1-2=.
education.solution.solve-instruction.text.steps.2=Ознакомьтесь с информацией о задаче. Для этого изучите все информационные окна: главную информацию, постановку задачи и справку по изучаемым материалам.
education.solution.solve-instruction.text.steps.3=Откройте файловый редактор. Вам будет предложен для решения файл с шаблоном кода и комментариями автора. Предложите своё решение, используя изучаемые классы и материалы.
education.solution.solve-instruction.text.steps.4=Запустите своё решение (кнопка находится в правом нижнем углу редактора).
education.solution.solve-instruction.text.steps.5=Теперь вы можете на визуализационной сцене посмотреть, как работает ваша программа. Используйте кнопки управления сценой, чтобы перематывать шаги или воспроизводить анимацию. В случае успешного решения вы увидите окно успешного выполнения задачи. Иначе вы знаете, на каком шаге произошла ошибка, и без особых трудностей разберётесь в проблеме!
